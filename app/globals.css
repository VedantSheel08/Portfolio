@import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Sora:wght@300;400;600;700&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
  --cyan-glow: rgba(0, 255, 255, 0.5);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background: #000000;
  font-family: "Sora", sans-serif;
  overflow-x: hidden;
  line-height: 1.6;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #000;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, #00ffff, #0066ff);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, #00cccc, #0044cc);
}

/* Selection */
::selection {
  background: rgba(0, 255, 255, 0.3);
  color: white;
}

/* Custom animations */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulse-glow {
  0%,
  100% {
    box-shadow:
      0 0 5px var(--cyan-glow),
      0 0 10px var(--cyan-glow),
      0 0 15px var(--cyan-glow);
  }
  50% {
    box-shadow:
      0 0 10px var(--cyan-glow),
      0 0 20px var(--cyan-glow),
      0 0 30px var(--cyan-glow);
  }
}

@keyframes neural-pulse {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: #00ffff;
  }
}

/* Utility classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}

.animate-neural-pulse {
  animation: neural-pulse 3s ease-in-out infinite;
}

.text-glow {
  text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
}

.border-glow {
  border-color: #00ffff;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
}

.bg-glass {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 255, 255, 0.2);
}

.gradient-text {
  background: linear-gradient(45deg, #00ffff, #0066ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Font families */
.font-orbitron {
  font-family: "Orbitron", monospace;
}

.font-sora {
  font-family: "Sora", sans-serif;
}

/* Grid pattern background */
.grid-bg {
  background-image:
    linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
}

/* Glitch effect */
.glitch {
  position: relative;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  animation: glitch-1 0.5s infinite;
  color: #00ffff;
  z-index: -1;
}

.glitch::after {
  animation: glitch-2 0.5s infinite;
  color: #ff00ff;
  z-index: -2;
}

@keyframes glitch-1 {
  0%,
  14%,
  15%,
  49%,
  50%,
  99%,
  100% {
    transform: translate(0, 0) skew(0deg);
  }
  1%,
  3% {
    transform: translate(-2px, 1px) skew(2deg);
  }
  16%,
  18% {
    transform: translate(2px, -1px) skew(-2deg);
  }
  51%,
  53% {
    transform: translate(-1px, 2px) skew(1deg);
  }
}

@keyframes glitch-2 {
  0%,
  15%,
  16%,
  40%,
  41%,
  99%,
  100% {
    transform: translate(0, 0) skew(0deg);
  }
  2%,
  4% {
    transform: translate(2px, -2px) skew(-1deg);
  }
  17%,
  19% {
    transform: translate(-1px, 2px) skew(1deg);
  }
  42%,
  44% {
    transform: translate(1px, -1px) skew(-2deg);
  }
}

/* Line clamp utility */
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

/* Responsive design helpers */
@media (max-width: 768px) {
  .text-responsive {
    font-size: clamp(1rem, 4vw, 2rem);
  }

  .heading-responsive {
    font-size: clamp(2rem, 8vw, 4rem);
  }
}
